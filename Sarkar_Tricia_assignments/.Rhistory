#get summary/descriptive stats
describe(df[, c("reaction_time", "avgAccuracy")])
#Install "psych" package
library("psych")
library("truncnorm")
# Read in the data (in a normal case)
#Set seed for replication
set.seed(1)
# Simulating data (for our case)
nsubj = 128 #based on power analysis
nPerGroup = 64
nConds = 2
nTrials <- 10
mindfulness <- nPerGroup
NOmindfulness <- nPerGroup
condLabels = c("mindfulness", "NOmindfulness") #One group watches the mindfulness meditation video, the other group does not.
# Create participant IDs
Participant <- rep(1:nsubj, each = nTrials)
# Create condition labels
Condition <- rep(rep(condLabels, each = nPerGroup), each = nTrials) # 64 participants per condition
# Simulate unique RT per trial depending on condition, truncate at 0 because people cannot have negative RT
reaction_timeDIST <- c(
rtruncnorm(nPerGroup * nTrials, a = 0, mean = 700, sd = 200),  # Mindfulness
rtruncnorm(nPerGroup * nTrials, a = 0, mean = 900, sd = 350)   # NOmindfulness
)
# Simulate accuracy per group
mindfulnessdistAccuracy <- rnorm(nPerGroup, mean = 95, sd = 10)
NOmindfulnessdistAccuracy <- rnorm(nPerGroup, mean = 90, sd = 10)
# Round to nearest 10 and clip between 60 and 100
mindfulnessdistAccuracy <- pmin(pmax(round(mindfulnessdistAccuracy / 10) * 10, 0), 100)
NOmindfulnessdistAccuracy <- pmin(pmax(round(NOmindfulnessdistAccuracy / 10) * 10, 0), 100)
# Repeat each accuracy value across 10 trials
accuracyM <- rep(mindfulnessdistAccuracy, each = nTrials)
accuracyNM <- rep(NOmindfulnessdistAccuracy, each = nTrials)
accuracyDIST <- c(accuracyM, accuracyNM)
# Simulate response and correct response
responses <- sample(c("triangle", "circle", "star"), nsubj * nTrials, replace = TRUE)
correct_responses <- sample(c("triangle", "circle", "star"), nsubj * nTrials, replace = TRUE)
# Put everything into a dataframe
df <- data.frame(
Participant = Participant,
Condition = Condition,
trial_number = rep(1:nTrials, nsubj),
response = responses,
correct_response = correct_responses,
reaction_time = reaction_timeDIST,
avgAccuracy = accuracyDIST,
stringsAsFactors = TRUE
)
head(df)
#get summary/descriptive stats
describe(df[, c("reaction_time", "avgAccuracy")])
#check variable distributions (ex. histogram)
#check correlations between variables (ex. scatterplots)
#Install "psych" package
library(psych)
library(truncnorm)
library(package)
#Install "psych" package
library(psych)
library(truncnorm)
library(dplyr)
# Read in the data (in a normal case)
#Set seed for replication
set.seed(1)
# Simulating data (for our case)
nsubj = 128 #based on power analysis
nPerGroup = 64
nConds = 2
nTrials <- 10
mindfulness <- nPerGroup
NOmindfulness <- nPerGroup
condLabels = c("mindfulness", "NOmindfulness") #One group watches the mindfulness meditation video, the other group does not.
# Create participant IDs
Participant <- rep(1:nsubj, each = nTrials)
# Create condition labels
Condition <- rep(rep(condLabels, each = nPerGroup), each = nTrials) # 64 participants per condition
# Simulate unique RT per trial depending on condition, truncate at 0 because people cannot have negative RT
reaction_timeDIST <- c(
rtruncnorm(nPerGroup * nTrials, a = 0, mean = 700, sd = 200),  # Mindfulness
rtruncnorm(nPerGroup * nTrials, a = 0, mean = 900, sd = 350)   # NOmindfulness
)
# Simulate accuracy per group
mindfulnessdistAccuracy <- rnorm(nPerGroup, mean = 95, sd = 10)
NOmindfulnessdistAccuracy <- rnorm(nPerGroup, mean = 90, sd = 10)
# Round to nearest 10 and clip between 60 and 100
mindfulnessdistAccuracy <- pmin(pmax(round(mindfulnessdistAccuracy / 10) * 10, 0), 100)
NOmindfulnessdistAccuracy <- pmin(pmax(round(NOmindfulnessdistAccuracy / 10) * 10, 0), 100)
# Repeat each accuracy value across 10 trials
accuracyM <- rep(mindfulnessdistAccuracy, each = nTrials)
accuracyNM <- rep(NOmindfulnessdistAccuracy, each = nTrials)
accuracyDIST <- c(accuracyM, accuracyNM)
# Simulate response and correct response
responses <- sample(c("triangle", "circle", "star"), nsubj * nTrials, replace = TRUE)
correct_responses <- sample(c("triangle", "circle", "star"), nsubj * nTrials, replace = TRUE)
# Put everything into a dataframe
df <- data.frame(
Participant = Participant,
Condition = Condition,
trial_number = rep(1:nTrials, nsubj),
response = responses,
correct_response = correct_responses,
reaction_time = reaction_timeDIST,
avgAccuracy = accuracyDIST,
stringsAsFactors = TRUE
)
head(df)
#get summary/descriptive stats
describe(df[, c("reaction_time", "avgAccuracy")])
#get mean RT and Accuracy per condition
df %>%
group_by(Condition) %>%
summarise(
mean_RT = mean(reaction_time, na.rm = TRUE),
mean_accuracy = mean(avgAccuracy, na.rm = TRUE)
)
#check variable distributions (ex. histogram)
#check correlations between variables (ex. scatterplots)
#get summary/descriptive stats
describe(df[, c("reaction_time", "avgAccuracy")])
#get mean RT and Accuracy per condition
df %>%
group_by(Condition) %>%
summarise(
mean_RT = mean(reaction_time, na.rm = TRUE),
mean_accuracy = mean(avgAccuracy, na.rm = TRUE)
)
#check variable distributions (ex. histogram)
#check correlations between variables (ex. scatterplots)
df %>%
group_by(Condition) %>%
summarise(
mean_RT = mean(reaction_time, na.rm = TRUE),
mean_accuracy = mean(avgAccuracy, na.rm = TRUE)
)
#Install "psych" package
library(psych)
library(truncnorm)
install.packages(dplyr)
library(dplyr)
#Install "psych" package
library(psych)
library(truncnorm)
install.packages(dplyr)
library(dplyr)
#Install "psych" package
library(psych)
library(truncnorm)
install.packages("dplyr")
#Install "psych" package
library(psych)
library(truncnorm)
install.packages("dplyr")
#Install "psych" package
library(psych)
library(truncnorm)
library(package)
#Install "psych" package
library(psych)
library(truncnorm)
library(dplyr)
# Read in the data (in a normal case)
#Set seed for replication
set.seed(1)
# Simulating data (for our case)
nsubj = 128 #based on power analysis
nPerGroup = 64
nConds = 2
nTrials <- 10
mindfulness <- nPerGroup
NOmindfulness <- nPerGroup
condLabels = c("mindfulness", "NOmindfulness") #One group watches the mindfulness meditation video, the other group does not.
# Create participant IDs
Participant <- rep(1:nsubj, each = nTrials)
# Create condition labels
Condition <- rep(rep(condLabels, each = nPerGroup), each = nTrials) # 64 participants per condition
# Simulate unique RT per trial depending on condition, truncate at 0 because people cannot have negative RT
reaction_timeDIST <- c(
rtruncnorm(nPerGroup * nTrials, a = 0, mean = 700, sd = 200),  # Mindfulness
rtruncnorm(nPerGroup * nTrials, a = 0, mean = 900, sd = 350)   # NOmindfulness
)
# Simulate accuracy per group
mindfulnessdistAccuracy <- rnorm(nPerGroup, mean = 95, sd = 10)
NOmindfulnessdistAccuracy <- rnorm(nPerGroup, mean = 90, sd = 10)
# Round to nearest 10 and clip between 60 and 100
mindfulnessdistAccuracy <- pmin(pmax(round(mindfulnessdistAccuracy / 10) * 10, 0), 100)
NOmindfulnessdistAccuracy <- pmin(pmax(round(NOmindfulnessdistAccuracy / 10) * 10, 0), 100)
# Repeat each accuracy value across 10 trials
accuracyM <- rep(mindfulnessdistAccuracy, each = nTrials)
accuracyNM <- rep(NOmindfulnessdistAccuracy, each = nTrials)
accuracyDIST <- c(accuracyM, accuracyNM)
# Simulate response and correct response
responses <- sample(c("triangle", "circle", "star"), nsubj * nTrials, replace = TRUE)
correct_responses <- sample(c("triangle", "circle", "star"), nsubj * nTrials, replace = TRUE)
# Put everything into a dataframe
df <- data.frame(
Participant = Participant,
Condition = Condition,
trial_number = rep(1:nTrials, nsubj),
response = responses,
correct_response = correct_responses,
reaction_time = reaction_timeDIST,
avgAccuracy = accuracyDIST,
stringsAsFactors = TRUE
)
head(df)
#get summary/descriptive stats
describe(df[, c("reaction_time", "avgAccuracy")])
#get mean RT and Accuracy per condition
df %>%
group_by(Condition) %>%
summarise(
mean_RT = mean(reaction_time, na.rm = TRUE),
mean_accuracy = mean(avgAccuracy, na.rm = TRUE)
)
#check variable distributions (ex. histogram)
#check correlations between variables (ex. scatterplots)
#get summary/descriptive stats
describe(df[, c("reaction_time", "avgAccuracy")])
#get mean RT and Accuracy per condition
df %>%
group_by(Condition) %>%
summarise(
mean_RT = mean(reaction_time, na.rm = TRUE),
sd_RT = sd(reaction_time, na.rm = TRUE),
mean_accuracy = mean(avgAccuracy, na.rm = TRUE),
sd_accuracy = sd(avgAccuracy, na.rm = TRUE)
#check variable distributions (ex. histogram)
#check correlations between variables (ex. scatterplots)
#get summary/descriptive stats
describe(df[, c("reaction_time", "avgAccuracy")])
#get mean RT and Accuracy per condition
df %>%
group_by(Condition) %>%
summarise(
mean_RT = mean(reaction_time, na.rm = TRUE),
sd_RT = sd(reaction_time, na.rm = TRUE),
mean_accuracy = mean(avgAccuracy, na.rm = TRUE),
sd_accuracy = sd(avgAccuracy, na.rm = TRUE)
#check variable distributions (ex. histogram)
#check correlations between variables (ex. scatterplots)
#get summary/descriptive stats
describe(df[, c("reaction_time", "avgAccuracy")])
#get mean RT and Accuracy per condition
df %>%
group_by(Condition) %>%
summarise(
mean_RT = mean(reaction_time, na.rm = TRUE),
sd_RT = sd(reaction_time, na.rm = TRUE),
mean_accuracy = mean(avgAccuracy, na.rm = TRUE),
sd_accuracy = sd(avgAccuracy, na.rm = TRUE)
)
#check variable distributions (ex. histogram)
#check correlations between variables (ex. scatterplots)
# Must first assess if data meets assumptions of a t-test.
# Test for normality for both conditions (Shapiro-Wilk Tesy)
df %>% group_by(Condition) %>%
summarise(
shapiro_accuracy_p = shapiro.test(avgAccuracy)$p.value,
shapiro_rt_p = shapiro.test(reaction_time)$p.value
)
# Test for normality for both conditions (Shapiro-Wilk Test)
df %>% group_by(Condition) %>%
summarise(
shapiro_accuracy_p = shapiro.test(avgAccuracy)$p.value,
shapiro_rt_p = shapiro.test(reaction_time)$p.value
)
# Test for homogeneity of variance for both conditions (Levene's Test)
# Levene's Test for Reaction Time
leveneTest(reaction_time ~ Condition, data = df)
#Install "psych" package
library(psych)
library(truncnorm)
library(dplyr)
install.packages("car")  # Only if not already installed
library(car)
